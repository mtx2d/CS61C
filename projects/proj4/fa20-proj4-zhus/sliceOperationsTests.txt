import numc as nc
import dumbpy as dp


a0 = nc.Matrix([[1, 2.0, 3], [4, 5.0, 6.0], [7.0, 8, 9.0]])
a1 = a0[1:, 1:] # [[5.0, 6.0], [8.0, 9.0]]
a2 = nc.Matrix([[10.0, 11.0], [12.0, 13]]) # [[10.0, 11.0], [12.0, 13.0]]
a3 = a0[:2, :2] # [[1.0, 2.0], [4.0, 5.0]]
a4 = a3[:, :] # [[1.0, 2.0], [4.0, 5.0]]
a5 = nc.Matrix([[-20.1, -40.1, -60.1], [1.5, 2.5, 3.5], [14, 15, 16.0], [-17.0, 18, 19.0]])
a6 = a5[1:3, :2] # [[1.5, 2.5], [14.0, 15.0]]
a7 = a5[0:2][:, :2] # [[-20.1, -40.1], [1.5, 2.5]]
a8 = nc.Matrix([[2.0, 3.1], [3.0, 4.1]]) # [[2.0, 3.1], [3.0, 4.1]]
a9 = a8[:][:, :] # [[2.0, 3.1], [3.0, 4.1]]
a10 = a8[0:2, :2] # # [[2.0, 3.1], [3.0, 4.1]]

# Addition
a1 + a2 # [[15.0, 17.0], [20.0, 22.0]]
a1 + a4 # [[6.0, 8.0], [12.0, 14.0]]
a2 + a3 # [[11.0, 13.0], [16.0, 18.0]]
a3 + a3 # [[2.0, 4.0], [8.0, 10.0]]
a3 + a4 # [[2.0, 4.0], [8.0, 10.0]]

# Subtraction
a1 - a2 # [[-5.0, -5.0], [-4.0, -4.0]]
a1 - a4 # [[4.0, 4.0], [4.0, 4.0]]
a2 - a3 # [[9.0, 9.0], [8.0, 8.0]]
a3 - a2 # [[-9.0, -9.0], [-8.0, -8.0]]
a7 - a6 # [[-21.6, -42.6], [-12.5, -12.5]]
a9 - a6 # [[0.5, 0.6], [-11.0, -10.9]]
a1 - a9 # [[3.0, 2.9], [5.0, 4.9]]
a6 - a6 # [[0.0, 0.0], [0.0, 0.0]]
a8 - a9 # [[0.0, 0.0], [0.0, 0.0]]

# Negate
-a1 # [[-5.0, -6.0], [-8.0, -9.0]]
-a7 # [[20.1, 40.1], [-1.5, -2.5]]
-a9 # [[-2.0, -3.1], [-3.0, -4.1]]

# Absolute Value
abs(a1) # [[5.0, 6.0], [8.0, 9.0]]
abs(a7) # [[20.1, 40.1], [1.5, 2.5]]
abs(a9) # [[2.0, 3.1], [3.0, 4.1]]
abs(a10) # [[2.0, 3.1], [3.0, 4.1]]

# Multiply
a10 * a10 # [[13.3, 18.91], [18.3, 26.11]]
a3 * a10 # [[8.0, 11.3], [23.0, 32.9]]
a4 * a1 # [[21.0, 24.0], [60.0, 69.0]]

# Power
a10 ** 0 # [[1.0, 0.0], [0.0, 1.0]]
a10 ** 3 # [[83.33, 118.761], [114.93, 163.781]]
a1 ** 1 # [[5.0, 6.0], [8.0, 9.0]]
a1 ** 4 # [[14737.0, 16968.0], [22624.0, 26049.0]]

# Nested Slices
b0 = nc.Matrix(4, 4, 1)
b0[1] = [2.1, 2.2, 2.3, 2.4]
b0[2] = [3.1, 3.2, 3.3, 3.4]
b1 = b0[1:, 1:]
b2 = b1[1:, 1:]


b0 # [[1.0, 1.0, 1.0, 1.0], [2.1, 2.2, 2.3, 2.4], [3.1, 3.2, 3.3, 3.4], [1.0, 1.0, 1.0, 1.0]]
b1 # [[2.2, 2.3, 2.4], [3.2, 3.3, 3.4], [1.0, 1.0, 1.0]]
b2 # [[3.3, 3.4], [1.0, 1.0]]


b2[0][1] = -4.0
b0 # [[1.0, 1.0, 1.0, 1.0], [2.1, 2.2, 2.3, 2.4], [3.1, 3.2, 3.3, -4.0], [1.0, 1.0, 1.0, 1.0]]
b1 # [[2.2, 2.3, 2.4], [3.2, 3.3, -4.0], [1.0, 1.0, 1.0]]
b2 # [[3.3, -4.0], [1.0, 1.0]]


b1[2][1] = -3.0
b0 # [[1.0, 1.0, 1.0, 1.0], [2.1, 2.2, 2.3, 2.4], [3.1, 3.2, 3.3, -4.0], [1.0, 1.0, -3.0, 1.0]]
b1 # [[2.2, 2.3, 2.4], [3.2, 3.3, -4.0], [1.0, -3.0, 1.0]]
b2 # [[3.3, -4.0], [-3.0, 1.0]]


b0[3][3] = -5.0
b0 # [[1.0, 1.0, 1.0, 1.0], [2.1, 2.2, 2.3, 2.4], [3.1, 3.2, 3.3, -4.0], [1.0, 1.0, -3.0, -5.0]]
b1 # [[2.2, 2.3, 2.4], [3.2, 3.3, -4.0], [1.0, -3.0, -5.0]]
b2 # [[3.3, -4.0], [-3.0, -5.0]]

# Failed Power Checks
c0 = nc.Matrix([[1, 2, 3], [4, 5, 6]])
c1 = c0[:][:3]
c2 = c0[:, :]
c3 = c0[1:]
c0 ** 1 # Value Error
c1 ** 2 # Value Error
c2 ** 3 # Value Error
c3 ** 0 # Value Error

# Slicing & Pow
d0 = nc.Matrix([[4.1, 4.2, 4.3, 4.4], [5.1, 5.2, 5.3, 5.4], [6.1, 6.2, 6.3, 6.4], [7.1, 7.2, 7.3, 7.4]])
d1 = d0[1:]
d2 = d1[:][:, :3]
d3 = d1[:, 1:4]
d4 = d0[2:4, 1:3]
d5 = d1[:, 0:-2]

d0 # [[4.1, 4.2, 4.3, 4.4], [5.1, 5.2, 5.3, 5.4], [6.1, 6.2, 6.3, 6.4], [7.1, 7.2, 7.3, 7.4]]
d1 # [[5.1, 5.2, 5.3, 5.4], [6.1, 6.2, 6.3, 6.4], [7.1, 7.2, 7.3, 7.4]]
d2 # [[5.1, 5.2, 5.3], [6.1, 6.2, 6.3], [7.1, 7.2, 7.3]]
d3 # [[5.2, 5.3, 5.4], [6.2, 6.3, 6.4], [7.2, 7.3, 7.4]]
d4 # [[6.2, 6.3], [7.2, 7.3]]
d5 # [[5.1, 5.2], [6.1, 6.2], [7.1, 7.2]]
d2 ** 2 # [[95.36, 96.92, 98.48], [113.66, 115.52, 117.38], [131.96, 134.12, 136.28]]
d3 ** 4 # [[35403.4398, 35973.4917, 36543.5436], [42070.0458, 42747.4407, 43424.8356], [48736.6518, 49521.3897, 50306.1276]]
d4 ** 5 # [[206518.742, 209599.40925], [239542.182, 243115.46425]]

# Weird slices
d1[::, ::] # [[5.1, 5.2, 5.3, 5.4], [6.1, 6.2, 6.3, 6.4], [7.1, 7.2, 7.3, 7.4]]
d1[::] # [[5.1, 5.2, 5.3, 5.4], [6.1, 6.2, 6.3, 6.4], [7.1, 7.2, 7.3, 7.4]]
d1[1:3:1, 0:2:1] # [[6.1, 6.2], [7.1, 7.2]]
d1[1:-1] # [6.1, 6.2, 6.3, 6.4]
d1[:-1] # [[5.1, 5.2, 5.3, 5.4], [6.1, 6.2, 6.3, 6.4]]
d1[:, :-2] # [[5.1, 5.2], [6.1, 6.2], [7.1, 7.2]]
d5[1:10, 0:20] # [[6.1, 6.2], [7.1, 7.2]]

d5[1:4:2] # Value Error
d5[:5.0] # Type Error
d5[1.0:] # Type Error
d5[1.0] # Type Error
d5[2, 2.0] # Type Error






# COMPARISON CHECK
a0 = dp.Matrix([[1, 2.0, 3], [4, 5.0, 6.0], [7.0, 8, 9.0]])
a1 = a0[1:, 1:] # [[5.0, 6.0], [8.0, 9.0]]
a2 = dp.Matrix([[10.0, 11.0], [12.0, 13]]) # [[10.0, 11.0], [12.0, 13.0]]
a3 = a0[:2, :2] # [[1.0, 2.0], [4.0, 5.0]]
a4 = a3[:, :] # [[1.0, 2.0], [4.0, 5.0]]
a5 = dp.Matrix([[-20.1, -40.1, -60.1], [1.5, 2.5, 3.5], [14, 15, 16.0], [-17.0, 18, 19.0]])
a6 = a5[1:3, :2] # [[1.5, 2.5], [14.0, 15.0]]
a7 = a5[0:2][:, :2] # [[-20.1, -40.1], [1.5, 2.5]]
a8 = dp.Matrix([[2.0, 3.1], [3.0, 4.1]]) # [[2.0, 3.1], [3.0, 4.1]]
a9 = a8[:][:, :]
a10 = a8[0:2, :2]

# Addition
a1 + a2 # [[15.0, 17.0], [20.0, 22.0]]
a1 + a4 # [[6.0, 8.0], [12.0, 14.0]]
a2 + a3 # [[11.0, 13.0], [16.0, 18.0]]
a3 + a3 # [[2.0, 4.0], [8.0, 10.0]]
a3 + a4 # [[2.0, 4.0], [8.0, 10.0]]

# Subtraction
a1 - a2 # [[-5.0, -5.0], [-4.0, -4.0]]
a1 - a4 # [[4.0, 4.0], [4.0, 4.0]]
a2 - a3 # [[9.0, 9.0], [8.0, 8.0]]
a3 - a2 # [[-9.0, -9.0], [-8.0, -8.0]]
a7 - a6 # [[-21.6, -42.6], [-12.5, -12.5]]
a9 - a6 # [[0.5, 0.6], [-11.0, -10.9]]
a1 - a9 # [[3.0, 2.9], [5.0, 4.9]]

# Negate
-a1 # [[-5.0, -6.0], [-8.0, -9.0]]
-a7 # [[20.1, 40.1], [-1.5, -2.5]]
-a9 # [[-2.0, -3.1], [-3.0, -4.1]]

# Absolute Value
abs(a1) # [[5.0, 6.0], [8.0, 9.0]]
abs(a7) # [[20.1, 40.1], [1.5, 2.5]]
abs(a9) # [[2.0, 3.1], [3.0, 4.1]]
abs(a10) # [[2.0, 3.1], [3.0, 4.1]]

# Multiply
a10 * a10 # [[13.3, 18.91], [18.3, 26.11]]
a3 * a10 # [[8.0, 11.3], [23.0, 32.9]]
a4 * a1 # [[21.0, 24.0], [60.0, 69.0]]

# Power
a10 ** 0 # [[1.0, 0.0], [0.0, 1.0]]
a10 ** 3 # [[83.33, 118.761], [114.93, 163.781]]
a1 ** 1 # [[5.0, 6.0], [8.0, 9.0]]
a1 ** 4 # [[14737.0, 16968.0], [22624.0, 26049.0]]

# Failed Power Checks
c0 = dp.Matrix([[1, 2, 3], [4, 5, 6]])
c1 = c0[:][:3]
c2 = c0[:, :]
c0 ** 1 # Value Error
c1 ** 2 # Value Error
c2 ** 3 # Value Error

# Slicing & Pow
d0 = nc.Matrix([[4.1, 4.2, 4.3, 4.4], [5.1, 5.2, 5.3, 5.4], [6.1, 6.2, 6.3, 6.4], [7.1, 7.2, 7.3, 7.4]])
d1 = d0[1:]
d2 = d1[:][:, :3]
d3 = d1[:, 1:4]
d4 = d0[2:4, 1:3]
d5 = d1[:, 0:-2]

d0 # [[4.1, 4.2, 4.3, 4.4], [5.1, 5.2, 5.3, 5.4], [6.1, 6.2, 6.3, 6.4], [7.1, 7.2, 7.3, 7.4]]
d1 # [[5.1, 5.2, 5.3, 5.4], [6.1, 6.2, 6.3, 6.4], [7.1, 7.2, 7.3, 7.4]]
d2 # [[5.1, 5.2, 5.3], [6.1, 6.2, 6.3], [7.1, 7.2, 7.3]]
d3 # [[5.2, 5.3, 5.4], [6.2, 6.3, 6.4], [7.2, 7.3, 7.4]]
d4 # [[6.2, 6.3], [7.2, 7.3]]
d5 # [[5.1, 5.2], [6.1, 6.2], [7.1, 7.2]]
d2 ** 2 # [[95.36, 96.92, 98.48], [113.66, 115.52, 117.38], [131.96, 134.12, 136.28]]
d3 ** 4 # [[35403.4398, 35973.4917, 36543.5436], [42070.0458, 42747.4407, 43424.8356], [48736.6518, 49521.3897, 50306.1276]]
d4 ** 5 # [[206518.742, 209599.40925], [239542.182, 243115.46425]]

# Weird slices
d1[::, ::] # [[5.1, 5.2, 5.3, 5.4], [6.1, 6.2, 6.3, 6.4], [7.1, 7.2, 7.3, 7.4]]
d1[::] # [[5.1, 5.2, 5.3, 5.4], [6.1, 6.2, 6.3, 6.4], [7.1, 7.2, 7.3, 7.4]]
d1[1:3:1, 0:2:1] # [[6.1, 6.2], [7.1, 7.2]]
d1[1:-1] # [6.1, 6.2, 6.3, 6.4]
d1[:-1] # [[5.1, 5.2, 5.3, 5.4], [6.1, 6.2, 6.3, 6.4]]
d1[:, :-2] # [[5.1, 5.2], [6.1, 6.2], [7.1, 7.2]]
d5[1:10, 0:20] # [[6.1, 6.2], [7.1, 7.2]]

d5[1:4:2] # Value Error
d5[:5.0] # Type Error
d5[1.0:] # Type Error
d5[1.0] # Type Error
d5[2, 2.0] # Type Error




